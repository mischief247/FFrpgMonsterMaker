package com.mischief247.ffrpgmonstermaker.data.monsters;

public enum SupportAbilities {
    AUTO_CLASS_1_POSITIVE(19,6),
    AUTO_CLASS_2_POSITIVE(30,10),
    AUTO_CLASS_3_POSITIVE(44,15),
    AUTO_CLASS_4_POSITIVE(64,21),
    AUTO_CLASS_1_NEGATIVE(-19,6),
    AUTO_CLASS_2_NEGATIVE(-30,10),
    AUTO_CLASS_3_NEGATIVE(-44,15),
    AUTO_CLASS_4_NEGATIVE(-64,21),
    BAD_SCAN(15,7),
    NULL_SCAN(10,4),
    COME_BACK_DELAY_2(50,18),
    COME_BACK_DELAY_4(37,14),
    COME_BACK_DELAY_6(25,9),
    CRITICAL_ATTACK_STANDARD(8,3),
    CRITICAL_ATTACK_PLUS(13,5),
    CRITICAL_ATTACK_MAX(18,7),
    ELEMENTAL_ABSORBANCE(33,15),
    ELEMENTAL_IMMUNITY(15,7),
    ELEMENTAL_POTENCY(60,41),
    ELEMENTAL_RESISTANCE(7,3),
    ELEMENTAL_WEAKNESS(-9,-4),
    EVADER(35,25),
    EVASION_PLUS_10(10,3),
    EVASION_PLUS_25(19,6),
    EVASION_PLUS_50(35,25),
    EVASION_PLUS_75(60,25),
    HEAVY_ARMOR(10,3),
    LOW_EVASION(-33,-11),
    LOW_MAGIC_EVASION(-33,-11),
    MAGIC_EVASION_PLUS_10(10,3),
    MAGIC_EVASION_PLUS_25(19,6),
    MAGIC_EVASION_PLUS_50(35,25),
    MAGIC_EVASION_PLUS_75(60,25),
    MANABOUND(-30,-10),
    MINION(-20,-7),
    MYSTIC_RESISTANCE(10,3),
    NULL_DRAIN(15,7),
    RESIST_DRAIN(7,3),
    SOS_POSITIVE_1(7,2),
    SOS_POSITIVE_2(12,4),
    SOS_POSITIVE_3(20,88),
    SOS_POSITIVE_4(36,12),
    SOS_NEGATIVE_1(-7,-2),
    SOS_NEGATIVE_2(-12,-4),
    SOS_NEGATIVE_3(-20,-8),
    SOS_NEGATIVE_4(-36,-12),
    STATUS_RESISTANCE_FATAL(13,5),
    STATUS_RESISTANCE_MYSTIFY(9,4),
    STATUS_RESISTANCE_SEAL(11,4),
    STATUS_RESISTANCE_TIME(6,2),
    STATUS_RESISTANCE_TOXIN(6,2),
    STATUS_RESISTANCE_TRANSFORM(9,3),
    STATUS_RESISTANCE_WEAKEN(9,4),
    STATUS_RESISTANCE_CLASS_1(2,1),
    STATUS_RESISTANCE_CLASS_2(4,1),
    STATUS_RESISTANCE_CLASS_3(6,2),
    STATUS_RESISTANCE_CLASS_4(8,3),
    STATUS_IMMUNITY_FATAL(25,10),
    STATUS_IMMUNITY_MYSTIFY(18,8),
    STATUS_IMMUNITY_SEAL(22,9),
    STATUS_IMMUNITY_TIME(12,5),
    STATUS_IMMUNITY_TOXIN(13,5),
    STATUS_IMMUNITY_TRANSFORM(18,7),
    STATUS_IMMUNITY_WEAKEN(19,8),
    STATUS_IMMUNITY_CLASS_1(5,2),
    STATUS_IMMUNITY_CLASS_2(9,3),
    STATUS_IMMUNITY_CLASS_3(12,5),
    STATUS_IMMUNITY_CLASS_4(16,6),
    WEAK_SPOT_CLASS_1(-10,-3),
    WEAK_SPOT_CLASS_2(-19,-6),
    WEAK_SPOT_CLASS_3(-30,-10),
    WEAK_SPOT_CLASS_4(-44,-15),
    X_FIGHT(+50,18),
    COUNTER_ATTACK_50(14,7),
    COUNTER_ATTACK_75(22,11),
    COUNTER_ATTACK_AUTO(44,22),
    COUNTER_MAGIC_30(15,7),
    COUNTER_MAGIC_60(24,12),
    COUNTER_MAGIC_AUTO(48,24),
    COUNTER_STANCE_PHYSICAL(15,7),
    COUNTER_STANCE_MAGICAL(15,7),
    COUNTER_STATUS_CLASS_1(30,14),
    COUNTER_STATUS_CLASS_2(35,16),
    COUNTER_STATUS_CLASS_3(43,20),
    COUNTER_STATUS_CLASS_4(59,24),
    FINAL_ATTACK(20,10),
    FISSION(10,3),
    RETURN_DAMAGE_5(25,7),
    RETURN_DAMAGE_10(30,10),
    RETURN_DAMAGE_25(50,17),
    ROTATING_WEAKNESS(21,7)
    ;
    public final double XP_MOD;
    public final double GIL_MOD;
    public final boolean IS_MULTIPLICATIVE;
    SupportAbilities(double xpMod,double gilMod){
        XP_MOD = xpMod;
        GIL_MOD= gilMod;
        IS_MULTIPLICATIVE = false;
    }
    SupportAbilities(double xpMod,double gilMod, boolean isMultiplicative){
        XP_MOD = xpMod;
        GIL_MOD= gilMod;
        IS_MULTIPLICATIVE = isMultiplicative;
    }
}
